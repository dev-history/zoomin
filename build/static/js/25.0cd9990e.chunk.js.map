{"version":3,"file":"static/js/25.0cd9990e.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthReset.js","views/pages/authentication/authentication/ResetPassword.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","/* eslint-disable no-unused-vars */\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport BackgroundImage from 'assets/images/login-screen.jpg';\r\n\r\nconst AuthWrapper1 = styled('div')(({}) => ({\r\n    backgroundImage: `url(${BackgroundImage})`,\r\n    minHeight: '100vh',\r\n    width: '100%',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput, Typography } from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst CreatePasswordPage = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/auth/createpassword\" {...props} role={undefined} />);\r\n\r\nconst ResetPassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} container alignItems=\"left\" justifyContent=\"left\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography\r\n                            color=\"#FFFFFF\"\r\n                            fontFamily=\"Inter\"\r\n                            fontStyle=\"normal\"\r\n                            fontWeight=\"400\"\r\n                            fontSize=\"21px\"\r\n                            lineHeight=\"40px\"\r\n                            marginBottom=\"75px\"\r\n                            width=\"555px\"\r\n                        >\r\n                            No Worries! Just enter your email and we'll send you a reset password link.\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.email && errors.email)}\r\n                            sx={{ ...theme.typography.customInput, marginBottom: '58px' }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    component={CreatePasswordPage}\r\n                                    to=\"/auth/createpassword\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    sx={{\r\n                                        backgroundColor: '#FF0676',\r\n                                        borderRadius: '18px',\r\n                                        height: '90px',\r\n                                        fontFamily: 'Inter',\r\n                                        fontStyle: 'normal',\r\n                                        fontWeight: '700',\r\n                                        fontSize: '27px',\r\n                                        lineHeight: '34px'\r\n                                    }}\r\n                                >\r\n                                    Send Recovery Email\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","/* eslint-disable no-unused-vars */\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport ResetPassword from '../auth-forms/AuthReset';\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <PerfectScrollbar\r\n                component=\"div\"\r\n                style={{\r\n                    height: '100vh'\r\n                }}\r\n            >\r\n                <Grid container direction=\"row\" justifyContent=\"left\" alignItems=\"center\" sx={{ minHeight: '100vh' }}>\r\n                    <Grid item xs={12} md={12} sm={12} lg={7}>\r\n                        <Grid\r\n                            container\r\n                            sx={{\r\n                                width: '100%',\r\n                                marginLeft: 'auto',\r\n                                maxWidth: '1320px',\r\n                                height: '100vh',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}\r\n                        >\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                md={12}\r\n                                sm={12}\r\n                                lg={12}\r\n                                sx={{\r\n                                    marginLeft: '166px',\r\n                                    marginRight: '283px'\r\n                                }}\r\n                            >\r\n                                <Grid container alignItems=\"left\" justifyContent=\"left\">\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"left\"\r\n                                            justifyContent=\"left\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"left\" justifyContent=\"left\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color=\"#FFFFFF\"\r\n                                                        gutterBottom\r\n                                                        fontSize={matchDownSM ? '50px' : '70px'}\r\n                                                        fontWeight=\"700\"\r\n                                                        fontStyle=\"normal\"\r\n                                                        fontFamily=\"Inter\"\r\n                                                        lineHeight=\"85px\"\r\n                                                        marginBottom=\"30px\"\r\n                                                    >\r\n                                                        Reset Password\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <ResetPassword />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </PerfectScrollbar>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["scripted","useRef","useEffect","current","AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","x","cycleX","useCycle","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","styled","backgroundImage","BackgroundImage","minHeight","width","backgroundPosition","backgroundSize","CreatePasswordPage","React","props","to","role","others","theme","useTheme","scriptedRef","useScriptRef","Grid","container","justifyContent","spacing","item","xs","alignItems","Box","sx","mb","Typography","color","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","marginBottom","initialValues","submit","validationSchema","Yup","shape","email","max","required","password","onSubmit","async","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","mt","Button","component","disableElevation","disabled","size","variant","backgroundColor","borderRadius","height","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","style","md","sm","lg","marginLeft","maxWidth","marginRight","Stack","gutterBottom"],"sourceRoot":""}