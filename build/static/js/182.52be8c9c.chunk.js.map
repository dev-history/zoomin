{"version":3,"file":"static/js/182.52be8c9c.chunk.js","mappings":"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","sources":["ui-component/cards/MainCard.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/authentication/ForgotPassword.js","../node_modules/@mui/material/esm/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/esm/CardHeader/CardHeader.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    // border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from '@mui/material';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","/* eslint-disable no-unused-vars */\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport BackgroundImage from 'assets/images/login-screen.jpg';\r\n\r\nconst AuthWrapper1 = styled('div')(({}) => ({\r\n    backgroundImage: `url(${BackgroundImage})`,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Stack, Typography, useMediaQuery, Box, Button } from '@mui/material';\r\n\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst ResetPasswordPage = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/auth/resetpassword\" {...props} role={undefined} />);\r\n\r\nconst ForgotPassword = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12} md={12} sm={12} lg={12}>\r\n                    <Grid container justifyContent=\"left\" alignItems=\"left\" sx={{ minHeight: 'calc(100vh - 250px)' }}>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={12}\r\n                            sm={12}\r\n                            lg={5}\r\n                            sx={{\r\n                                m: { xs: 1, sm: 5 },\r\n                                mb: 0\r\n                            }}\r\n                        >\r\n                            <AuthCardWrapper\r\n                                sx={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                <Grid container alignItems=\"left\" justifyContent=\"left\">\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"left\"\r\n                                            justifyContent=\"left\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"left\" justifyContent=\"left\" spacing={1}>\r\n                                                    <Typography color=\"#FFFFFF\" gutterBottom fontSize={matchDownSM ? '50px' : '70px'}>\r\n                                                        Forgot Password?\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                                            <Grid item xs={12} container alignItems=\"left\" justifyContent=\"left\">\r\n                                                <Box sx={{ mb: 2 }}>\r\n                                                    <Typography variant=\"subtitle1\" color=\"#FFFFFF\">\r\n                                                        That&apos;s okey, it heppens! Click on the button below to reset your password\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} container alignItems=\"left\" justifyContent=\"left\">\r\n                                                <Box sx={{ mt: 2 }}>\r\n                                                    <AnimateButton>\r\n                                                        <Button\r\n                                                            component={ResetPasswordPage}\r\n                                                            to=\"/auth/resetpassword\"\r\n                                                            disableElevation\r\n                                                            fullWidth\r\n                                                            size=\"large\"\r\n                                                            type=\"submit\"\r\n                                                            variant=\"contained\"\r\n                                                            sx={{ backgroundColor: '#FF0676', width: '490px' }}\r\n                                                        >\r\n                                                            Reset Your Password\r\n                                                        </Button>\r\n                                                    </AnimateButton>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;"],"names":["headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","AnimateButton","offset1","offset2","type","direction","offset","scale","x","cycleX","useCycle","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","other","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","p","sm","xl","styled","backgroundImage","BackgroundImage","minHeight","ResetPasswordPage","React","props","to","role","matchDownSM","useMediaQuery","breakpoints","down","container","justifyContent","item","alignItems","m","mb","backgroundColor","spacing","color","gutterBottom","fontSize","mt","component","disableElevation","fullWidth","size","width","getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","name","overridesResolver","styles","_extends","cardHeaderClasses","subheader","root","display","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","inProps","useThemeProps","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","Typography","_jsx","_jsxs","clsx","as"],"sourceRoot":""}