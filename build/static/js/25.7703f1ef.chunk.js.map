{"version":3,"file":"static/js/25.7703f1ef.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","ui-component/cards/MainCard.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthCardWrapper.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthReset.js","views/pages/authentication/authentication/ResetPassword.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    // border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { Box } from '@mui/material';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","/* eslint-disable no-unused-vars */\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport BackgroundImage from 'assets/images/login-screen.jpg';\r\n\r\nconst AuthWrapper1 = styled('div')(({}) => ({\r\n    backgroundImage: `url(${BackgroundImage})`,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput, Typography } from '@mui/material';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst CreatePasswordPage = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/auth/createpassword\" {...props} role={undefined} />);\r\n\r\nconst ResetPassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} container alignItems=\"left\" justifyContent=\"left\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\" color=\"#FFFFFF\">\r\n                            No Worries! Just enter your email and we'll send you a reset password link.\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    component={CreatePasswordPage}\r\n                                    to=\"/auth/createpassword\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    sx={{ backgroundColor: '#FF0676' }}\r\n                                >\r\n                                    Send Recovery Email\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","/* eslint-disable no-unused-vars */\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport ResetPassword from '../auth-forms/AuthReset';\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12} md={12} sm={12} lg={12}>\r\n                    <Grid container justifyContent=\"left\" alignItems=\"left\" sx={{ minHeight: 'calc(100vh - 150px)' }}>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={12}\r\n                            sm={12}\r\n                            lg={5}\r\n                            sx={{\r\n                                m: { xs: 1, sm: 5 },\r\n                                mb: 0\r\n                            }}\r\n                        >\r\n                            <AuthCardWrapper\r\n                                sx={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                <Grid container alignItems=\"left\" justifyContent=\"left\">\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"left\"\r\n                                            justifyContent=\"left\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"left\" justifyContent=\"left\" spacing={1}>\r\n                                                    <Typography color=\"#FFFFFF\" gutterBottom fontSize={matchDownSM ? '50px' : '70px'}>\r\n                                                        Reset Password\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <ResetPassword />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["scripted","useRef","useEffect","current","headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","AnimateButton","offset1","offset2","type","direction","offset","scale","x","cycleX","useCycle","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","other","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","p","sm","xl","styled","backgroundImage","BackgroundImage","minHeight","CreatePasswordPage","React","props","to","role","scriptedRef","useScriptRef","Grid","container","justifyContent","spacing","item","alignItems","Box","mb","Typography","color","initialValues","submit","validationSchema","Yup","shape","email","max","required","password","onSubmit","async","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","FormHelperText","mt","Button","component","disableElevation","disabled","size","backgroundColor","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","m","AuthCardWrapper","Stack","gutterBottom","fontSize"],"sourceRoot":""}