{"version":3,"file":"static/js/7.4eee98d4.chunk.js","mappings":"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","sources":["ui-component/cards/MainCard.js","ui-component/cards/Skeleton/GameDefaultCard.js","views/games/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    // border: border ? '1px solid' : 'none',\r\n                    borderRadius: '20px',\r\n                    backgroundColor: '#36006844',\r\n                    boxShadow: '40px 7px 132px rgb(0,0,0,0.7)',\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import * as React from 'react';\r\nimport { CardActionArea, Box, Grid, Card, CardActions, CardContent, CardMedia, Button, Typography, SvgIcon, Checkbox } from '@mui/material';\r\nimport { East, CheckCircleRounded, PanoramaFishEyeRounded } from '@mui/icons-material';\r\nimport { withStyles, makeStyles } from '@material-ui/core';\r\n\r\nexport const FiCard = withStyles({\r\n    root: {\r\n        position: 'relative'\r\n    }\r\n})(Card);\r\n\r\nexport const FiCardActionArea = withStyles({\r\n    root: {\r\n        position: 'relative'\r\n    }\r\n})(CardActionArea);\r\n\r\nexport const FiCardActions = withStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        left: '0px',\r\n        bottom: '0px'\r\n    }\r\n})(CardActions);\r\n\r\nexport const FiCardContent = withStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'transparent'\r\n    }\r\n})(CardContent);\r\n\r\nexport const FiCardMedia = withStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        height: '100%',\r\n        width: '100%'\r\n    }\r\n})(CardMedia);\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    /**\r\n     * Max Card with for demo\r\n     * same values used in Material-Ui Card Demos\r\n     */\r\n    card: {\r\n        minWidth: 350\r\n    },\r\n\r\n    /**\r\n     * Applied to Orginal Card demo\r\n     * Same vale used in Material-ui Card Demos\r\n     */\r\n    media: {\r\n        height: 140\r\n    },\r\n\r\n    /**\r\n     * Demo stlying to inclrease text visibility\r\n     * May verry on implementation\r\n     */\r\n    fiCardContent: {\r\n        color: '#ffffff',\r\n        backgroundColor: 'transparent'\r\n    },\r\n    fiCardContentTextSecondary: {\r\n        color: 'rgba(255,255,255,0.78)'\r\n    }\r\n});\r\n\r\nexport default function GameDefaultCard(props) {\r\n    const classes = useStyles();\r\n\r\n    const handlePlay = () => {\r\n        console.log('Play now: ', props.href, props.card_name);\r\n        //TODO: Play game\r\n    };\r\n\r\n    return (\r\n        <FiCard\r\n            className={classes.card}\r\n            sx={{\r\n                height: '280px',\r\n                cursor: 'pointer',\r\n                borderRadius: '20px',\r\n                '& .MuiCardMedia-root': {\r\n                    border: '1px solid transparent'\r\n                },\r\n                '& .MuiCardMedia-root:hover': {\r\n                    border: '1px solid #FF0676'\r\n                }\r\n            }}\r\n        >\r\n            <FiCardMedia\r\n                media=\"picture\"\r\n                alt=\"Contemplative Reptile\"\r\n                image={props.card_image}\r\n                title=\"Contemplative Reptile\"\r\n                sx={{\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'cover',\r\n                    borderRadius: '20px',\r\n                    position: 'relative',\r\n                    objectFit: 'cover',\r\n                    transition: '0.3s',\r\n                    display: 'inline-block'\r\n                }}\r\n            />\r\n            <FiCardActions className={classes.fiCardContent}>\r\n                <Button size=\"small\" color=\"inherit\" variant=\"none\" sx={{ fontSize: '20px', padding: '0px' }} onClick={handlePlay}>\r\n                    Play Now\r\n                </Button>\r\n                <SvgIcon component={East} />\r\n            </FiCardActions>\r\n        </FiCard>\r\n    );\r\n}\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport ModalVideo from 'react-modal-video';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Box,\r\n    CardContent,\r\n    Drawer,\r\n    Button,\r\n    SvgIcon,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardMedia,\r\n    Avatar\r\n} from '@mui/material';\r\nimport { withStyles, makeStyles } from '@material-ui/core';\r\nimport { East } from '@mui/icons-material';\r\n\r\nimport GameDefaultCard from 'ui-component/cards/Skeleton/GameDefaultCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nconst ImportGame = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/games/import\" {...props} role={undefined} />);\r\n\r\nexport const TCard = withStyles({\r\n    root: {\r\n        position: 'relative'\r\n    }\r\n})(Card);\r\n\r\nexport const TCardActionArea = withStyles({\r\n    root: {\r\n        position: 'relative'\r\n    }\r\n})(CardActionArea);\r\n\r\nexport const TCardActions = withStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        left: '0px',\r\n        bottom: '0px'\r\n    }\r\n})(CardActions);\r\n\r\nexport const TCardContent = withStyles({\r\n    root: {\r\n        position: 'relative',\r\n        backgroundColor: 'transparent'\r\n    }\r\n})(CardContent);\r\n\r\nexport const TCardMedia = withStyles({\r\n    root: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        height: '100%',\r\n        width: '100%'\r\n    }\r\n})(CardMedia);\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    /**\r\n     * Max Card with for demo\r\n     * same values used in Material-Ui Card Demos\r\n     */\r\n\r\n    /**\r\n     * Applied to Orginal Card demo\r\n     * Same vale used in Material-ui Card Demos\r\n     */\r\n    media: {\r\n        height: 140\r\n    },\r\n\r\n    /**\r\n     * Demo stlying to inclrease text visibility\r\n     * May verry on implementation\r\n     */\r\n    tCardContent: {\r\n        color: '#ffffff',\r\n        backgroundColor: 'transparent'\r\n    },\r\n    tCardContentTextSecondary: {\r\n        color: 'rgba(255,255,255,0.78)'\r\n    }\r\n});\r\n\r\nconst ManageGame = () => {\r\n    const classes = useStyles();\r\n    const tempcard = [\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img1.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img2.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img3.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img4.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img5.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img6.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img7.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img8.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img9.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img10.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img11.jpg`)\r\n        },\r\n        {\r\n            name: 'Home',\r\n            href: 'home',\r\n            icon: require(`../../assets/images/game-img12.jpg`)\r\n        }\r\n    ];\r\n\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const handlePreview = () => {\r\n        setModalOpen(!modalOpen);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MainCard content={false} sx={{ marginBottom: '50px' }}>\r\n                <CardContent>\r\n                    <Grid container>\r\n                        <Grid item xs={12} sx={{ paddingRight: '0px !important' }}>\r\n                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item sx={{ paddingLeft: '35px' }}>\r\n                                    <Typography\r\n                                        sx={{\r\n                                            fontFamily: 'Inter',\r\n                                            fontStyle: 'normal',\r\n                                            fontWeight: '700',\r\n                                            fontSize: '30px',\r\n                                            lineHeight: '36px',\r\n                                            color: '#FFFFFF'\r\n                                        }}\r\n                                    >\r\n                                        Our Games\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item sx={{ paddingRight: '0px !important' }}>\r\n                                    <Button\r\n                                        // component={AddPrize}\r\n                                        // to=\"/games/import\"\r\n                                        variant=\"contained\"\r\n                                        sx={{\r\n                                            borderRadius: '8.8px',\r\n                                            backgroundColor: '#FF0676',\r\n                                            width: '100px',\r\n                                            height: '40px',\r\n                                            fontSize: '16px',\r\n                                            fontWeight: '700',\r\n                                            marginRight: '22px'\r\n                                        }}\r\n                                    >\r\n                                        Upload\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                        component={ImportGame}\r\n                                        to=\"/games/import\"\r\n                                        variant=\"outlined\"\r\n                                        sx={{\r\n                                            borderRadius: '8.8px',\r\n                                            border: '1px solid #04B4DD',\r\n                                            width: '100px',\r\n                                            height: '40px',\r\n                                            fontSize: '16px',\r\n                                            fontWeight: '700',\r\n                                            color: '#04B4DD'\r\n                                        }}\r\n                                    >\r\n                                        Import\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </MainCard>\r\n\r\n            <Grid item lg={12} md={12} sm={12} xs={12} sx={{ marginBottom: '50px' }}>\r\n                <TCard\r\n                    className={classes.card}\r\n                    sx={{\r\n                        height: '415px',\r\n                        cursor: 'pointer',\r\n                        '& .MuiCardMedia-root': {\r\n                            border: '1px solid transparent'\r\n                        },\r\n                        '& .MuiCardMedia-root:hover': {\r\n                            border: '1px solid #FF0676'\r\n                        }\r\n                    }}\r\n                >\r\n                    <TCardMedia\r\n                        media=\"picture\"\r\n                        alt=\"Contemplative Reptile\"\r\n                        title=\"Contemplative Reptile\"\r\n                        sx={{\r\n                            backgroundPosition: 'center',\r\n                            backgroundSize: 'cover',\r\n                            borderRadius: '20px',\r\n                            position: 'relative',\r\n                            objectFit: 'cover',\r\n                            transition: '0.3s',\r\n                            display: 'inline-block'\r\n                        }}\r\n                        image={require(`../../assets/images/game-img.jpg`)}\r\n                    />\r\n                    <TCardActions className={classes.TCardContent}>\r\n                        <Button\r\n                            size=\"small\"\r\n                            color=\"inherit\"\r\n                            variant=\"none\"\r\n                            sx={{ fontSize: '20px', padding: '0px' }}\r\n                            onClick={handlePreview}\r\n                        >\r\n                            Play Now\r\n                        </Button>\r\n                        <SvgIcon component={East} />\r\n                    </TCardActions>\r\n                </TCard>\r\n            </Grid>\r\n\r\n            <Grid container spacing={5}>\r\n                <Grid item xs={12}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container spacing={5}>\r\n                            {tempcard.map((item, index) => {\r\n                                return (\r\n                                    <Grid item xl={4} lg={6} md={12} sm={12} xs={12} sx={{ paddingX: '10px', marginBottom: '25px' }}>\r\n                                        <GameDefaultCard\r\n                                            card_name={item.name}\r\n                                            card_image={item.icon}\r\n                                            key={index}\r\n                                            href={item.href}\r\n                                        ></GameDefaultCard>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <React.Fragment>\r\n                <ModalVideo channel=\"\" isOpen={modalOpen} videoId=\"\" onClose={handlePreview} />\r\n            </React.Fragment>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ManageGame;\r\n"],"names":["headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","useTheme","borderRadius","backgroundColor","action","variant","className","FiCard","withStyles","root","position","Card","FiCardActions","CardActionArea","left","bottom","CardActions","FiCardMedia","CardContent","top","right","height","width","CardMedia","useStyles","makeStyles","container","display","flexDirection","alignItems","justifyContent","card","minWidth","media","fiCardContent","color","fiCardContentTextSecondary","GameDefaultCard","props","classes","cursor","alt","image","card_image","backgroundPosition","backgroundSize","objectFit","transition","Button","size","fontSize","padding","onClick","console","log","href","card_name","SvgIcon","component","East","ImportGame","React","to","role","undefined","TCard","TCardActionArea","TCardActions","TCardContent","TCardMedia","tCardContent","tCardContentTextSecondary","tempcard","name","icon","require","modalOpen","setModalOpen","useState","handlePreview","marginBottom","Grid","item","xs","paddingRight","alignContent","paddingLeft","Typography","fontFamily","fontStyle","fontWeight","lineHeight","marginRight","lg","md","sm","spacing","map","index","xl","paddingX","channel","isOpen","videoId","onClose"],"sourceRoot":""}