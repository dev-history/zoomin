{"version":3,"file":"static/js/669.52e1170e.chunk.js","mappings":"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","sources":["hooks/useScriptRef.js","services/apis/user.js","ui-component/extended/AnimateButton.js","views/pages/authentication/AuthWrapper1.js","views/pages/authentication/auth-forms/AuthLogin.js","views/pages/authentication/authentication/Login.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import Api from 'services/api';\r\nimport { LOG_OUT } from 'store/actions';\r\nimport { API_USER_SIGN_IN, API_USER_SIGN_UP } from 'store/api';\r\n\r\nexport const login = async (data) => {\r\n    return Api.post(API_USER_SIGN_IN, data);\r\n};\r\n\r\nexport const signup = async (data) => {\r\n    return Api.post(API_USER_SIGN_UP, data);\r\n};\r\n\r\nexport const logout = () => {\r\n    return { type: LOG_OUT };\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","/* eslint-disable no-unused-vars */\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport BackgroundImage from 'assets/images/login-screen.jpg';\r\n\r\nconst AuthWrapper1 = styled('div')(({}) => ({\r\n    backgroundImage: `url(${BackgroundImage})`,\r\n    minHeight: '100vh',\r\n    width: '100%',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography,\r\n    TextField\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, useFormik } from 'formik';\r\n\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { login, logout } from 'services/apis/user';\r\nimport { GET_EVENTS, GET_GAMES, GET_REWARDS, SET_TOKEN, LOG_OUT } from 'store/actions';\r\n\r\nimport { store } from 'store';\r\nimport { getCampaign, getGame, getReward } from 'services/apis/server';\r\n\r\nconst DashboardPage = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/dashbaord\" {...props} role={undefined} />);\r\nconst ForgotPasswordPage = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/auth/forgotpassword\" {...props} role={undefined} />);\r\n\r\nconst FirebaseLogin = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const scriptedRef = useScriptRef();\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\r\n        password: Yup.string('Enter your password')\r\n            .min(6, 'Password should be of minimum 6 characters length')\r\n            .required('Password is required')\r\n    });\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            onLogin(values);\r\n        }\r\n    });\r\n    const state = store.getState();\r\n    const onLogin = async (values) => {\r\n        const data = await login({\r\n            email: values.email,\r\n            password: values.password\r\n        });\r\n        const { access_token } = data;\r\n        dispatch({ type: SET_TOKEN, token: access_token });\r\n        navigate('/dashboard');\r\n    };\r\n\r\n    useEffect(() => {\r\n        let success = false;\r\n\r\n        try {\r\n            const payload = jwt(auth.token);\r\n            if (payload.exp * 1000 > Date.now()) {\r\n                success = true;\r\n            } else {\r\n                toast(`Your token is expired!`, { type: 'error' });\r\n            }\r\n        } catch {}\r\n        if (!success) {\r\n            logout();\r\n        }\r\n    }, []);\r\n    console.log(state);\r\n    const handleNext = (values) => {\r\n        if (!values.email) {\r\n            return alert('Please Enter Your Email!');\r\n        }\r\n        navigate('/auth/forgotpassword', { state: { values } });\r\n    };\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} container alignItems=\"left\" justifyContent=\"left\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography\r\n                            color=\"#FFFFFF\"\r\n                            fontFamily=\"Inter\"\r\n                            fontStyle=\"normal\"\r\n                            fontWeight=\"400\"\r\n                            fontSize=\"21px\"\r\n                            lineHeight=\"40px\"\r\n                            marginBottom=\"25px\"\r\n                        >\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. At quam diam viverra pellentesque tincidunt duis in.\r\n                            Ornare.\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                    sx={{ ...theme.typography.customInput, marginBottom: '45px' }}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                edge=\"end\"\r\n                                size=\"large\"\r\n                            >\r\n                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                    sx={{ ...theme.typography.customInput, marginBottom: '45px' }}\r\n                />\r\n\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={checked}\r\n                                onChange={(event) => setChecked(event.target.checked)}\r\n                                name=\"checked\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        sx={{\r\n                            color: '#FFFFFF',\r\n                            '& > span': {\r\n                                fontFamily: 'Inter',\r\n                                fontStyle: 'normal',\r\n                                fontWeight: '400',\r\n                                fontSize: '21px',\r\n                                lineHeight: '39px'\r\n                            }\r\n                        }}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Typography\r\n                        color=\"#FFFFFF\"\r\n                        sx={{\r\n                            textDecoration: 'none',\r\n                            cursor: 'pointer',\r\n                            fontFamily: 'Inter',\r\n                            fontStyle: 'normal',\r\n                            fontWeight: '600',\r\n                            fontSize: '21px',\r\n                            lineHeight: '180%'\r\n                        }}\r\n                        onClick={() => handleNext(formik.values)}\r\n                        // component={ForgotPasswordPage}\r\n                        // to=\"/auth/forgotpassword\"\r\n                    >\r\n                        Forgot Password?\r\n                    </Typography>\r\n                </Stack>\r\n                <Button\r\n                    disableElevation\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    sx={{\r\n                        backgroundColor: '#FF0676',\r\n                        marginTop: '50px',\r\n                        marginBottom: '50px',\r\n                        borderRadius: '18px',\r\n                        height: '90px',\r\n                        fontFamily: 'Inter',\r\n                        fontStyle: 'normal',\r\n                        fontWeight: '700',\r\n                        fontSize: '27px',\r\n                        lineHeight: '34px'\r\n                    }}\r\n                >\r\n                    Login\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthLogin from '../auth-forms/AuthLogin';\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <PerfectScrollbar\r\n                component=\"div\"\r\n                style={{\r\n                    height: '100vh'\r\n                }}\r\n            >\r\n                <Grid container direction=\"row\" justifyContent=\"left\" alignItems=\"center\" sx={{ minHeight: '100vh' }}>\r\n                    <Grid item xs={12} md={12} sm={12} lg={7}>\r\n                        <Grid\r\n                            container\r\n                            sx={{\r\n                                width: '100%',\r\n                                marginLeft: 'auto',\r\n                                maxWidth: '1320px',\r\n                                height: '100vh',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}\r\n                        >\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                md={12}\r\n                                sm={12}\r\n                                lg={12}\r\n                                sx={{\r\n                                    marginLeft: '166px',\r\n                                    marginRight: '100px'\r\n                                }}\r\n                            >\r\n                                <Grid container alignItems=\"left\" justifyContent=\"left\">\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"left\"\r\n                                            justifyContent=\"left\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"left\" justifyContent=\"left\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color=\"#FFFFFF\"\r\n                                                        gutterBottom\r\n                                                        fontSize={matchDownSM ? '50px' : '70px'}\r\n                                                        fontWeight=\"700\"\r\n                                                        fontStyle=\"normal\"\r\n                                                        fontFamily=\"Inter\"\r\n                                                        lineHeight=\"85px\"\r\n                                                        marginBottom=\"12px\"\r\n                                                    >\r\n                                                        Welcome.\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthLogin />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"row\" alignItems=\"left\" xs={12}>\r\n                                            <Typography sx={{ lineHeight: '39px', fontSize: '21.5px', fontWeight: '400' }}>\r\n                                                Don&apos;t have an account?\r\n                                            </Typography>\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/auth/signup\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none', lineHeight: '39px', fontSize: '21.5px', fontWeight: '400' }}\r\n                                            >\r\n                                                Sign up\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </PerfectScrollbar>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["scripted","useRef","useEffect","current","login","async","Api","API_USER_SIGN_IN","data","signup","API_USER_SIGN_UP","logout","type","LOG_OUT","AnimateButton","forwardRef","ref","offset1","offset2","children","direction","offset","scale","x","cycleX","useCycle","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","styled","backgroundImage","BackgroundImage","minHeight","width","backgroundPosition","backgroundSize","others","theme","useTheme","dispatch","useDispatch","navigate","useNavigate","checked","setChecked","useScriptRef","useState","showPassword","setShowPassword","validationSchema","Yup","email","required","password","min","formik","useFormik","initialValues","onSubmit","values","onLogin","state","store","access_token","SET_TOKEN","token","success","jwt","auth","exp","Date","now","toast","console","log","Grid","container","justifyContent","spacing","item","xs","alignItems","Box","sx","mb","Typography","color","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","marginBottom","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","typography","customInput","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","size","Visibility","VisibilityOff","Stack","FormControlLabel","control","Checkbox","target","textDecoration","cursor","alert","handleNext","Button","disableElevation","variant","backgroundColor","marginTop","borderRadius","height","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","component","style","md","sm","lg","marginLeft","maxWidth","marginRight","gutterBottom","AuthLogin","Link","to"],"sourceRoot":""}