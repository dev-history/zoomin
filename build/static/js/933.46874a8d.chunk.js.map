{"version":3,"file":"static/js/933.46874a8d.chunk.js","mappings":"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","sources":["ui-component/cards/MainCard.js","ui-component/PrizeSelect.js","views/launch/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    // border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n\r\nexport default function PrizeSelect() {\r\n    const theme = useTheme();\r\n    return (\r\n        <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={top100Films}\r\n            sx={{ ...theme.typography.customInput }}\r\n            renderInput={(params) => <TextField {...params} label=\"Select Price\" />}\r\n        />\r\n    );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n    { label: 'The Shawshank Redemption', year: 1994 },\r\n    { label: 'The Godfather', year: 1972 },\r\n    { label: 'The Godfather: Part II', year: 1974 },\r\n    { label: 'The Dark Knight', year: 2008 },\r\n    { label: '12 Angry Men', year: 1957 },\r\n    { label: \"Schindler's List\", year: 1993 },\r\n    { label: 'Pulp Fiction', year: 1994 },\r\n    {\r\n        label: 'The Lord of the Rings: The Return of the King',\r\n        year: 2003\r\n    },\r\n    { label: 'The Good, the Bad and the Ugly', year: 1966 },\r\n    { label: 'Fight Club', year: 1999 },\r\n    {\r\n        label: 'The Lord of the Rings: The Fellowship of the Ring',\r\n        year: 2001\r\n    },\r\n    {\r\n        label: 'Star Wars: Episode V - The Empire Strikes Back',\r\n        year: 1980\r\n    },\r\n    { label: 'Forrest Gump', year: 1994 },\r\n    { label: 'Inception', year: 2010 },\r\n    {\r\n        label: 'The Lord of the Rings: The Two Towers',\r\n        year: 2002\r\n    },\r\n    { label: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n    { label: 'Goodfellas', year: 1990 },\r\n    { label: 'The Matrix', year: 1999 },\r\n    { label: 'Seven Samurai', year: 1954 },\r\n    {\r\n        label: 'Star Wars: Episode IV - A New Hope',\r\n        year: 1977\r\n    },\r\n    { label: 'City of God', year: 2002 },\r\n    { label: 'Se7en', year: 1995 },\r\n    { label: 'The Silence of the Lambs', year: 1991 },\r\n    { label: \"It's a Wonderful Life\", year: 1946 },\r\n    { label: 'Life Is Beautiful', year: 1997 },\r\n    { label: 'The Usual Suspects', year: 1995 },\r\n    { label: 'Léon: The Professional', year: 1994 },\r\n    { label: 'Spirited Away', year: 2001 },\r\n    { label: 'Saving Private Ryan', year: 1998 },\r\n    { label: 'Once Upon a Time in the West', year: 1968 },\r\n    { label: 'American History X', year: 1998 },\r\n    { label: 'Interstellar', year: 2014 },\r\n    { label: 'Casablanca', year: 1942 },\r\n    { label: 'City Lights', year: 1931 },\r\n    { label: 'Psycho', year: 1960 },\r\n    { label: 'The Green Mile', year: 1999 },\r\n    { label: 'The Intouchables', year: 2011 },\r\n    { label: 'Modern Times', year: 1936 },\r\n    { label: 'Raiders of the Lost Ark', year: 1981 },\r\n    { label: 'Rear Window', year: 1954 },\r\n    { label: 'The Pianist', year: 2002 },\r\n    { label: 'The Departed', year: 2006 },\r\n    { label: 'Terminator 2: Judgment Day', year: 1991 },\r\n    { label: 'Back to the Future', year: 1985 },\r\n    { label: 'Whiplash', year: 2014 },\r\n    { label: 'Gladiator', year: 2000 },\r\n    { label: 'Memento', year: 2000 },\r\n    { label: 'The Prestige', year: 2006 },\r\n    { label: 'The Lion King', year: 1994 },\r\n    { label: 'Apocalypse Now', year: 1979 },\r\n    { label: 'Alien', year: 1979 },\r\n    { label: 'Sunset Boulevard', year: 1950 },\r\n    {\r\n        label: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\r\n        year: 1964\r\n    },\r\n    { label: 'The Great Dictator', year: 1940 },\r\n    { label: 'Cinema Paradiso', year: 1988 },\r\n    { label: 'The Lives of Others', year: 2006 },\r\n    { label: 'Grave of the Fireflies', year: 1988 },\r\n    { label: 'Paths of Glory', year: 1957 },\r\n    { label: 'Django Unchained', year: 2012 },\r\n    { label: 'The Shining', year: 1980 },\r\n    { label: 'WALL·E', year: 2008 },\r\n    { label: 'American Beauty', year: 1999 },\r\n    { label: 'The Dark Knight Rises', year: 2012 },\r\n    { label: 'Princess Mononoke', year: 1997 },\r\n    { label: 'Aliens', year: 1986 },\r\n    { label: 'Oldboy', year: 2003 },\r\n    { label: 'Once Upon a Time in America', year: 1984 },\r\n    { label: 'Witness for the Prosecution', year: 1957 },\r\n    { label: 'Das Boot', year: 1981 },\r\n    { label: 'Citizen Kane', year: 1941 },\r\n    { label: 'North by Northwest', year: 1959 },\r\n    { label: 'Vertigo', year: 1958 },\r\n    {\r\n        label: 'Star Wars: Episode VI - Return of the Jedi',\r\n        year: 1983\r\n    },\r\n    { label: 'Reservoir Dogs', year: 1992 },\r\n    { label: 'Braveheart', year: 1995 },\r\n    { label: 'M', year: 1931 },\r\n    { label: 'Requiem for a Dream', year: 2000 },\r\n    { label: 'Amélie', year: 2001 },\r\n    { label: 'A Clockwork Orange', year: 1971 },\r\n    { label: 'Like Stars on Earth', year: 2007 },\r\n    { label: 'Taxi Driver', year: 1976 },\r\n    { label: 'Lawrence of Arabia', year: 1962 },\r\n    { label: 'Double Indemnity', year: 1944 },\r\n    {\r\n        label: 'Eternal Sunshine of the Spotless Mind',\r\n        year: 2004\r\n    },\r\n    { label: 'Amadeus', year: 1984 },\r\n    { label: 'To Kill a Mockingbird', year: 1962 },\r\n    { label: 'Toy Story 3', year: 2010 },\r\n    { label: 'Logan', year: 2017 },\r\n    { label: 'Full Metal Jacket', year: 1987 },\r\n    { label: 'Dangal', year: 2016 },\r\n    { label: 'The Sting', year: 1973 },\r\n    { label: '2001: A Space Odyssey', year: 1968 },\r\n    { label: \"Singin' in the Rain\", year: 1952 },\r\n    { label: 'Toy Story', year: 1995 },\r\n    { label: 'Bicycle Thieves', year: 1948 },\r\n    { label: 'The Kid', year: 1921 },\r\n    { label: 'Inglourious Basterds', year: 2009 },\r\n    { label: 'Snatch', year: 2000 },\r\n    { label: '3 Idiots', year: 2009 },\r\n    { label: 'Monty Python and the Holy Grail', year: 1975 }\r\n];\r\n","/* eslint-disable no-unused-vars */\r\nimport * as React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { Button, CardContent, Grid, TextField, Typography, Select } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\nimport PrizeSelect from 'ui-component/PrizeSelect';\r\n\r\nconst LaunchGameView = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/launch/games/index\" {...props} role={undefined} />);\r\nconst styles = {\r\n    root: {\r\n        'flex-direction': 'row-reverse'\r\n    }\r\n};\r\n\r\nconst LaunchPage = () => {\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(null);\r\n\r\n    return (\r\n        <MainCard>\r\n            <CardContent>\r\n                <form>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Typography variant=\"h1\" color=\"white\">\r\n                                        Select Name & Launch Date\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"selectname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container>\r\n                                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                    <DatePicker\r\n                                        label=\"Launch Date\"\r\n                                        value={value}\r\n                                        onChange={(newValue) => {\r\n                                            setValue(newValue);\r\n                                        }}\r\n                                        renderInput={(params) => (\r\n                                            <TextField {...params} sx={{ ...theme.typography.customInput }} fullWidth />\r\n                                        )}\r\n                                    />\r\n                                </LocalizationProvider>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid sx={{ height: '20px' }}></Grid>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Typography variant=\"h1\" color=\"white\">\r\n                                        Select or Create Prize\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <PrizeSelect />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"selectname\"\r\n                                    type=\"text\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"selectname\"\r\n                                    type=\"text\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"selectname\"\r\n                                    type=\"text\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Grid container>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Select Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"selectname\"\r\n                                    type=\"text\"\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid sx={{ height: '20px' }}></Grid>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Typography variant=\"h1\" color=\"white\">\r\n                                        Select Audiance Bucket\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <PrizeSelect />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Button\r\n                                component={LaunchGameView}\r\n                                to=\"/launch/games/index\"\r\n                                variant=\"contained\"\r\n                                sx={{\r\n                                    borderRadius: '9.8',\r\n                                    backgroundColor: '#FF0676',\r\n                                    width: '100px',\r\n                                    height: '40px',\r\n                                    fontSize: '16px',\r\n                                    fontWeight: '700'\r\n                                }}\r\n                            >\r\n                                Next\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </CardContent>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default LaunchPage;\r\n"],"names":["headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","PrizeSelect","Autocomplete","disablePortal","id","options","top100Films","typography","customInput","renderInput","params","TextField","label","year","LaunchGameView","React","props","to","role","undefined","value","setValue","CardContent","Grid","container","spacing","gridSpacing","item","xs","alignContent","justifyContent","Typography","color","sm","fullWidth","margin","name","type","defaultValue","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","onChange","newValue","height","Button","component","borderRadius","backgroundColor","width","fontSize","fontWeight"],"sourceRoot":""}