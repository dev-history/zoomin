{"version":3,"file":"static/js/908.f89fa1c5.chunk.js","mappings":"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","sources":["ui-component/cards/MainCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/Campaigns.js","views/dashboard/SingleReport/LineChart.js","views/dashboard/SingleReport/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n// ==============================|| CUSTOM MAIN CARD ||============================== //\r\n\r\nconst MainCard = forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass = '',\r\n            contentSX = {},\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    // border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={150} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\r\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default PopularCard;\r\n","/* eslint-disable no-unused-vars */\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nconst CampaignsList = [\r\n    {\r\n        Status: 'Active',\r\n        Name: 'Ogra Megi',\r\n        Game: 'Shock & Awe',\r\n        Users: '900,00',\r\n        Winner: '$3000,00'\r\n    },\r\n    {\r\n        Status: 'Active',\r\n        Name: 'Grim Stroke',\r\n        Game: 'Long Winter',\r\n        Users: '900,00',\r\n        Winner: '$5000,00'\r\n    },\r\n    {\r\n        Status: 'Active',\r\n        Name: 'Jessica',\r\n        Game: 'Master Thief',\r\n        Users: '900,00',\r\n        Winner: '$2000,00'\r\n    },\r\n    {\r\n        Status: 'Active',\r\n        Name: 'Ogra Megi',\r\n        Game: 'Shock & Awe',\r\n        Users: '900,00',\r\n        Winner: '$3000,00'\r\n    }\r\n];\r\n\r\nconst Campaigns = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const campaignTable = CampaignsList.map((item, index) => {\r\n        return (\r\n            <Grid item xs={12} key={index} style={{ paddingRight: '24px', paddingLeft: '44px' }}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item xs={2}>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                    Status\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color=\"#43CC83\" fontWeight={'600'} fontSize=\"20px\">\r\n                                    {item.Status}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                    Name\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color=\"#FFFFFF\" fontWeight={'600'} fontSize=\"20px\">\r\n                                    {item.Name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                    Game\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color=\"#FF4C9D\" fontWeight={'600'} fontSize=\"20px\">\r\n                                    {item.Game}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={3}>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                    Users\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color=\"#FFFFFF\" fontWeight={'600'} fontSize=\"20px\">\r\n                                    {item.Users}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                    Winner\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" color=\"#04B4DD\" fontWeight={'600'} fontSize=\"20px\">\r\n                                    {item.Winner}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider sx={{ my: 1.5 }} />\r\n            </Grid>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h1\" color=\"white\">\r\n                                            Your Campaigns\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <MoreHorizOutlinedIcon\r\n                                            fontSize=\"small\"\r\n                                            sx={{\r\n                                                color: theme.palette.primary[200],\r\n                                                cursor: 'pointer'\r\n                                            }}\r\n                                            aria-controls=\"menu-popular-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        />\r\n                                        <Menu\r\n                                            id=\"menu-popular-card\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}> 1-10</MenuItem>\r\n                                            <MenuItem onClick={handleClose}> 11-20</MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {campaignTable}\r\n                        </Grid>\r\n                    </CardContent>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nCampaigns.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default Campaigns;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { CardContent, Grid, Typography } from '@mui/material';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nexport const options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            position: 'top',\r\n            align: 'end'\r\n        },\r\n        title: {\r\n            display: false,\r\n            text: 'Chart.js Line Chart'\r\n        }\r\n    },\r\n    maintainAspectRatio: false\r\n};\r\n\r\nconst labels = ['-100', '-90', '-80', '-70', '-60', '-50', '-40', '-30', '-20', '-10', '0'];\r\n\r\nexport const data = {\r\n    labels,\r\n    datasets: [\r\n        {\r\n            label: 'Time',\r\n            data: ['34', '23', '39', '76', '61', '23', '73', '88', '46', '66', '32'],\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            hoverBackgroundColor: 'rgba(255, 255, 132, 1)',\r\n            borderWidth: 5,\r\n            pointHoverRadius: 10,\r\n            pointRadius: 5,\r\n            tension: 0.4\r\n        },\r\n        {\r\n            label: 'Dates Rang',\r\n            data: ['12', '23', '76', '61', '23', '73', '88', '46', '34', '72', '23'],\r\n            borderColor: 'rgb(53, 162, 235)',\r\n            backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            borderWidth: 5,\r\n            pointHoverRadius: 10,\r\n            pointRadius: 5,\r\n            tension: 0.4\r\n        }\r\n    ]\r\n};\r\n\r\nconst LineChartData = () => {\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Line data={data} options={options} style={{ height: '360px', padding: '20px' }} />\r\n        </Grid>\r\n    );\r\n};\r\nconst LineChart = () => {\r\n    return (\r\n        <MainCard content={false}>\r\n            <CardContent>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <Typography variant=\"h1\" color=\"white\">\r\n                                    User supplied data\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <LineChartData />\r\n                </Grid>\r\n            </CardContent>\r\n        </MainCard>\r\n    );\r\n};\r\nexport default LineChart;\r\n","/* eslint-disable no-unused-vars */\r\nimport { useEffect, useState } from 'react';\r\nimport { Grid } from '@mui/material';\r\n\r\nimport { gridSpacing } from 'store/constant';\r\nimport Campaigns from '../Default/Campaigns';\r\nimport LineChart from './LineChart';\r\n\r\nconst Dashboard = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <LineChart></LineChart>\r\n                <Grid style={{ height: '20px' }}></Grid>\r\n                <Campaigns></Campaigns>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["headerSX","mr","MainCard","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","container","spacing","gridSpacing","item","xs","alignItems","justifyContent","zeroMinWidth","height","width","p","display","pt","CampaignsList","Status","Name","Game","Users","Winner","isLoading","anchorEl","setAnchorEl","useState","handleClose","campaignTable","map","index","style","paddingRight","paddingLeft","direction","color","fontWeight","fontSize","my","alignContent","cursor","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","align","text","maintainAspectRatio","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","borderWidth","pointHoverRadius","pointRadius","tension","LineChartData","Grid","padding","CardContent","Typography","setLoading","useEffect","Campaigns"],"sourceRoot":""}