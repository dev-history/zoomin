{"version":3,"file":"static/js/54.1d2a95ba.chunk.js","mappings":"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","sources":["views/pages/authentication/auth-forms/AuthCreate.js","views/pages/authentication/authentication/CreatePassword.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography\r\n} from '@mui/material';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\nconst LoginPage = React.forwardRef((props, ref) => <RouterLink ref={ref} to=\"/auth/login\" {...props} role={undefined} />);\r\n\r\nconst CreatePassword = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} container alignItems=\"left\" justifyContent=\"left\">\r\n                    <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"subtitle1\" color=\"#FFFFFF\">\r\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nec nisl, eget integer nunc duis facilisi mauris urna,\r\n                            sagittis.\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">New Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Confirm Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"confirm\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        {errors.submit && (\r\n                            <Box sx={{ mt: 3 }}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    component={LoginPage}\r\n                                    to=\"/auth/login\"\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    sx={{ backgroundColor: '#FF0676' }}\r\n                                >\r\n                                    Submit Now\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreatePassword;\r\n","/* eslint-disable no-unused-vars */\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport CreatePassword from '../auth-forms/AuthCreate';\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12} md={12} sm={12} lg={12}>\r\n                    <Grid container justifyContent=\"left\" alignItems=\"left\" sx={{ minHeight: 'calc(100vh - 150px)' }}>\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            md={12}\r\n                            sm={12}\r\n                            lg={5}\r\n                            sx={{\r\n                                m: { xs: 1, sm: 5 },\r\n                                mb: 0\r\n                            }}\r\n                        >\r\n                            <AuthCardWrapper\r\n                                sx={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                <Grid container alignItems=\"left\" justifyContent=\"left\">\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"left\"\r\n                                            justifyContent=\"left\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"left\" justifyContent=\"left\" spacing={1}>\r\n                                                    <Typography color=\"#FFFFFF\" gutterBottom fontSize={matchDownSM ? '50px' : '70px'}>\r\n                                                        Create New Password\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <CreatePassword />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["LoginPage","React","props","ref","to","role","undefined","others","theme","useTheme","scriptedRef","useScriptRef","showPassword","setShowPassword","useState","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Grid","container","direction","justifyContent","spacing","item","xs","alignItems","Box","sx","mb","Typography","variant","color","initialValues","submit","validationSchema","Yup","shape","email","max","required","password","onSubmit","async","values","setErrors","setStatus","setSubmitting","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","Visibility","VisibilityOff","label","inputProps","FormHelperText","mt","AnimateButton","Button","component","disableElevation","disabled","backgroundColor","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper1","minHeight","md","sm","lg","m","AuthCardWrapper","Stack","gutterBottom","fontSize"],"sourceRoot":""}